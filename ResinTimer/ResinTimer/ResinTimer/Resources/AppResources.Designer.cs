//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ResinTimer.Resources {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ResinTimer.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
        ///   재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   If you report bug via github, you need github account. If you don&apos;t want to create github account, cancel this dialog and use E-Mail for bug reporting. Do you want to continue this process?과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string BugReport_Dialog_Message {
            get {
                return ResourceManager.GetString("BugReport_Dialog_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Caution과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string BugReport_Dialog_Title {
            get {
                return ResourceManager.GetString("BugReport_Dialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Dialog_No {
            get {
                return ResourceManager.GetString("Dialog_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Dialog_Yes {
            get {
                return ResourceManager.GetString("Dialog_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string EditPage_ApplyButtonText {
            get {
                return ResourceManager.GetString("EditPage_ApplyButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hour과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string EditPage_Hour {
            get {
                return ResourceManager.GetString("EditPage_Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Min과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string EditPage_Minute {
            get {
                return ResourceManager.GetString("EditPage_Minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sec과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string EditPage_Second {
            get {
                return ResourceManager.GetString("EditPage_Second", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Edit Info과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string EditPage_Title {
            get {
                return ResourceManager.GetString("EditPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remain Total Restore Time과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string EditPage_TotalRemainTimeLabel {
            get {
                return ResourceManager.GetString("EditPage_TotalRemainTimeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resin Timer과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string InfoPage_AppName {
            get {
                return ResourceManager.GetString("InfoPage_AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Developer Info과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string InfoPage_DeveloperInfoLabel {
            get {
                return ResourceManager.GetString("InfoPage_DeveloperInfoLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OpenSource License과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string InfoPage_OpenSourceLicenseButtonText {
            get {
                return ResourceManager.GetString("InfoPage_OpenSourceLicenseButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   App Info과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string InfoPage_Title {
            get {
                return ResourceManager.GetString("InfoPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Syncfusion.Licensing
        ///Syncfusion.Xamarin.SfGauge
        ///Xamarin.Essentials과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string LibraryList {
            get {
                return ResourceManager.GetString("LibraryList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The MIT License (MIT)
        ///
        ///Copyright (c) Microsoft Corporation
        ///
        ///All rights reserved.
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the followin[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string License_MIT_Microsoft {
            get {
                return ResourceManager.GetString("License_MIT_Microsoft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ESSENTIAL STUDIO SOFTWARE LICENSE AGREEMENT
        ///This Software License Agreement (the “Agreement”) is a legal agreement between you (“You”, “Your”, or
        ///“Customer”) and Syncfusion, Inc., a Delaware corporation with its principal place of business located at 2501 Aerial
        ///Center Parkway, Suite 200, Morrisville, NC 27560 (“Syncfusion”).
        ///This license is for Essential Studio Enterprise Edition, Essential Studio WPF Edition, Essential Studio PDF Edition,
        ///Essential Studio Xamarin Edition, and Essential Studio Win For[나머지 문자열은 잘림]&quot;;과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string License_Syncfusion {
            get {
                return ResourceManager.GetString("License_Syncfusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open Source License과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string LicensePage_Title {
            get {
                return ResourceManager.GetString("LicensePage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ESSENTIAL STUDIO SOFTWARE LICENSE AGREEMENT
        ///ESSENTIAL STUDIO SOFTWARE LICENSE AGREEMENT
        ///MIT License - Microsoft Corporation과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string LicenseTypeList {
            get {
                return ResourceManager.GetString("LicenseTypeList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Until Full Restore과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string MainPage_RemainTimeLabel {
            get {
                return ResourceManager.GetString("MainPage_RemainTimeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Resin Timer과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string MainPage_Title {
            get {
                return ResourceManager.GetString("MainPage_Title", resourceCulture);
            }
        }
    }
}
